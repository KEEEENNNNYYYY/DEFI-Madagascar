openapi: 3.0.3
info:
  title: API Defi Madagascar
  version: 1.0.0
  description: API REST pour gérer les utilisateurs, les posts et les messages.
servers:
  - url: http://localhost:5000

tags:
  - name: Users
    description: Gestion des utilisateurs
  - name: Posts
    description: Gestion des posts
  - name: Messages
    description: Gestion des messages privés
  - name: Search
    description: Recherche d’utilisateurs

paths:

  /users:
    get:
      tags:
        - Users
      summary: Récupérer tous les utilisateurs
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Liste des utilisateurs
    post:
      tags:
        - Users
      summary: Créer un nouvel utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                birthday:
                  type: string
                  format: date
                email:
                  type: string
                firebase_uid:
                  type: string
      responses:
        '201':
          description: Utilisateur créé

  /search:
    get:
      tags:
        - Search
      summary: Rechercher un utilisateur
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: true
        - in: query
          name: offset
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Résultats de recherche

  /user:
    get:
      tags:
        - Users
      summary: Récupérer un utilisateur par ID
      parameters:
        - in: query
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Détails de l'utilisateur

  /posts:
    get:
      tags:
        - Posts
      summary: Récupérer tous les posts
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          required: false
        - in: query
          name: offset
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Liste des posts
    post:
      tags:
        - Posts
      summary: Créer un nouveau post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                image_url:
                  type: string
                public_id:
                  type: string
                user_id:
                  type: string
      responses:
        '201':
          description: Post créé
    delete:
      tags:
        - Posts
      summary: Supprimer un post
      parameters:
        - in: query
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Post supprimé

  /posts/user:
    get:
      tags:
        - Posts
      summary: Récupérer les posts d’un utilisateur
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
          required: true
        - in: query
          name: offset
          schema:
            type: integer
          required: false
      responses:
        '200':
          description: Liste des posts d'un utilisateur

  /posts/{id}:
    get:
      tags:
        - Posts
      summary: Récupérer un post par ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Détails du post

  /message:
    post:
      tags:
        - Messages
      summary: Envoyer un message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                senderId:
                  type: string
                receiverId:
                  type: string
                content:
                  type: string
                sentAt:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Message envoyé
    get:
      tags:
        - Messages
      summary: Récupérer une discussion entre deux utilisateurs
      parameters:
        - in: query
          name: user1
          schema:
            type: string
          required: true
        - in: query
          name: user2
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Messages entre deux utilisateurs

  /chat:
    get:
      tags:
        - Messages
      summary: Récupérer toutes les discussions d’un utilisateur
      parameters:
        - in: query
          name: userId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Liste des conversations

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        birthday:
          type: string
          format: date
        email:
          type: string
    Post:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        image_url:
          type: string
        user_id:
          type: string
        created_at:
          type: string
          format: date-time
    Message:
      type: object
      properties:
        id:
          type: string
        sender_id:
          type: string
        receiver_id:
          type: string
        content:
          type: string
        sent_at:
          type: string
          format: date-time
